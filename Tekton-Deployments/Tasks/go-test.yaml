---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: go-test
  namespace: tekton-pipelines
spec:
  params:
  - name: context
    default: .
    type: string
  - name: repo-full-name
    default: ""
  - name: target_url
    default: ""
  - name: github-context
    default: "go-test"
  - name: revision
    description: revision of commit to add status updates to
  workspaces:
  - name: source
    mountpath: /source
  results:
    - name: state
      description: state of the next github update
    - name: description
      description: description of the next github update
  steps:
    - name: update-github-start
      env:
        - name: GITHUBTOKEN
          valueFrom:
            secretKeyRef:
              name: github
              key: token
      image: curlimages/curl:latest
      script: |
        curl -X POST -H 'Content-Type: application/json' --data '{"state":"pending", "target_url": "$(params.target_url)", "description": "started", "context": "'$(params.github-context)'"}' https://$GITHUBTOKEN:x-oauth-basic@api.github.com/repos/$(params.repo-full-name)/statuses/$(params.revision)
        exit 0
    - name: run-ci-test
      image: golang:latest
      script: |
        #!/bin/bash
        cd /source/$(params.context)
        go test -v | grep "FAIL:\|PASS:" | sed 's/---//g' | sed 's/(/ /g' | sed 's/)/ /g' > /tekton/results/description
        if [[ $(< /tekton/results/description) == *"FAIL:"* ]]; then
          printf "failure" > /tekton/results/state
        else
          printf "success" > /tekton/results/state
        fi
        exit 0
    - name: update-github-finished
      env:
        - name: GITHUBTOKEN
          valueFrom:
            secretKeyRef:
              name: github
              key: token
      image: curlimages/curl:latest
      script: |
        while read line; do
          if [[ $line == *"PASS:"* ]]; then
            state=success
          else
            state=failure
          fi
          context=$line | cut -d " " -f 2
          { printf $line | cut -d " " -f 1 && printf $line | cut -d " " -f 3; } > temp.txt
          description= $(sed 'N;s/\n/ /' temp.txt)
          curl -X POST -H 'Content-Type: application/json' --data "{\"state\":\"${state}\", \"target_url\": \"$(params.target_url)\", \"description\": \"${description}\", \"context\": \"${context}\"}" https://$GITHUBTOKEN:x-oauth-basic@api.github.com/repos/$(params.repo-full-name)/statuses/$(params.revision)
        done < /tekton/results/description
        state=$(cat /tekton/results/state)
        if [[ $(cat /tekton/results/state) == *"failure"* ]]; then
          description="some tests have failed"
        else
          description="all tests succeeded"
        fi
        curl -X POST -H 'Content-Type: application/json' --data "{\"state\":\"${state}\", \"target_url\": \"$(params.target_url)\", \"description\": \"${description}\", \"context\": \"$(params.github-context)\"}" https://$GITHUBTOKEN:x-oauth-basic@api.github.com/repos/$(params.repo-full-name)/statuses/$(params.revision)
        
        exit 0
